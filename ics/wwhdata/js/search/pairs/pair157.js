function FileData_Pairs(x)
{
x.t("example","replacement");
x.t("f2-save","saves");
x.t("columns","leave");
x.t("columns","price");
x.t("columns","screen");
x.t("method","flag");
x.t("method","gross");
x.t("method","markup");
x.t("indicated","basis");
x.t("provide","gross");
x.t("exist","product");
x.t("below","price");
x.t("f7-price/cost","minimum");
x.t("discount","table");
x.t("available","chose");
x.t("measure","last");
x.t("measure","product");
x.t("measure","stocking");
x.t("measure","pricing");
x.t("measure","information");
x.t("measure","used");
x.t("suggested","retail");
x.t("description","current");
x.t("refer","price");
x.t("refer","entering");
x.t("refer","updating");
x.t("refer","basis");
x.t("refer","cost");
x.t("refer","establishing");
x.t("refer","maintaining");
x.t("refer","setting");
x.t("refer","quantity");
x.t("table","screen");
x.t("table","f8-prd");
x.t("key","description");
x.t("key","descriptions");
x.t("flag","inventory");
x.t("flag","company");
x.t(".80","price");
x.t("f7-order","special");
x.t("g/l","cost");
x.t("components","bill");
x.t("action","bar");
x.t("descriptions","prices");
x.t("descriptions","webworks_writearrow");
x.t("current","current");
x.t("current","want");
x.t("current","price");
x.t("field","function");
x.t("field","updated");
x.t("blank","entered");
x.t("blank","using");
x.t("f5-recompute","multiplied");
x.t("f5-recompute","10.00");
x.t("f5-recompute","recalculates");
x.t("f5-recompute","percent");
x.t("transfers","vendor");
x.t("last","price/cost");
x.t("last","update");
x.t("leave","blank");
x.t("displays","press");
x.t("press","f5-recompute");
x.t("bar","future");
x.t("inventory","parameters");
x.t("inventory","maintenance");
x.t("inventory","costs");
x.t("gross","profit");
x.t("customer","prices");
x.t("customer","maintenance");
x.t("customer","assigned");
x.t("change","field");
x.t("product/warehouse","maintenance");
x.t("product/warehouse","level");
x.t("orders","different");
x.t("ship","product");
x.t("ship","cost");
x.t("product","f2-save");
x.t("product","refer");
x.t("product","inventory");
x.t("product","product/warehouse");
x.t("product","prc");
x.t("product","price");
x.t("product","menu");
x.t("product","sales");
x.t("product","record");
x.t("product","price/cost");
x.t("product","prices");
x.t("product","warehouse/vendor");
x.t("product","cost");
x.t("product","maintenance");
x.t("product","different");
x.t("product","pricing");
x.t("product","level");
x.t("product","override");
x.t("product","previous");
x.t("product","view");
x.t("product","future");
x.t("product","q/b");
x.t("product","based");
x.t("product","vendor");
x.t("product","warehouse");
x.t("product",":product");
x.t("multiplied","1.20");
x.t("default","customer");
x.t("default","price");
x.t("prc","group");
x.t("want","product");
x.t("want","price");
x.t("want","maintain");
x.t("prc/cst","basis");
x.t("new","price/cost");
x.t("differences","standard");
x.t("price","example");
x.t("price","provide");
x.t("price","columns");
x.t("price","refer");
x.t("price","current");
x.t("price","default");
x.t("price","product");
x.t("price","price");
x.t("price","group");
x.t("price","sales");
x.t("price","minimum");
x.t("price","cost");
x.t("price","12.50");
x.t("price","code");
x.t("price","level");
x.t("price","groups");
x.t("price","12.00");
x.t("price","enter");
x.t("price","above");
x.t("price","column");
x.t("price","percentage");
x.t("price","based");
x.t("price","manually");
x.t("price","quantity");
x.t("indicates","price");
x.t("indicates","cost");
x.t("indicates","column");
x.t("list","price");
x.t("entering","prices/costs");
x.t("determines","replacement");
x.t("menu","path");
x.t("group","product");
x.t("group","products");
x.t("group","maintenance");
x.t("group","established");
x.t("add","price");
x.t("add","prices");
x.t("entry","product");
x.t("entry","stock");
x.t("saves","product");
x.t("false","webworks_writedivopen");
x.t("false","field/function");
x.t("pressing","f9-cst");
x.t("pressing","f8-prd");
x.t("wwdd1308020","false");
x.t("products","pricing");
x.t("path","inventory");
x.t("maintain","price");
x.t("maintain","cost");
x.t("wide","warehouse");
x.t("invoice","reconciliation");
x.t("f7-","pricing");
x.t("codes","calculate");
x.t("overridden","product");
x.t("overridden","price");
x.t("changed","product");
x.t("edit","pressing");
x.t("chose","save");
x.t("webworks_writedivopen","wwdd1308020");
x.t("entered","price");
x.t("entered","prices");
x.t("average","cost");
x.t("receipts","transfers");
x.t("receipts","entry");
x.t("direct","ship");
x.t("discounts","refer");
x.t("discounts","associated");
x.t("parameters","prc/cst");
x.t("parameters","determines");
x.t("sales","orders");
x.t("sales","cost");
x.t("sales","q/b");
x.t("sales","order");
x.t("updating","prices");
x.t("field/function","key");
x.t("standard","cost");
x.t("standard","costs");
x.t("determine","whether");
x.t("allows","enter");
x.t("basis","refer");
x.t("basis","press");
x.t("basis","codes");
x.t("basis","price/cost");
x.t("basis","calculate");
x.t("basis","f7-col");
x.t("basis","calc");
x.t("basis","column");
x.t("basis","calculated");
x.t("post","differences");
x.t("record","leave");
x.t("multiplier","basis");
x.t("multiplier","percent");
x.t("price/cost","change");
x.t("price/cost","information");
x.t("price/cost","values");
x.t("price/cost","column");
x.t("allow","determine");
x.t("allow","enter");
x.t("allow","view");
x.t("webworksrootpath","wwdd1308020");
x.t("divided",".80");
x.t("calculate","gross");
x.t("calculate","new");
x.t("calculate","price");
x.t("calculate","prices");
x.t("calculate","values");
x.t("prices","available");
x.t("prices","customer");
x.t("prices","product");
x.t("prices","prompt");
x.t("prices","opens");
x.t("prices","webworks_writedivclose");
x.t("prices","screen");
x.t("prices","defined");
x.t("prices","date");
x.t("prices","costs");
x.t("prices","using");
x.t("prices","effect");
x.t("rolled","product");
x.t("f9-cst","qtybrk");
x.t("prompt","updated");
x.t("purchase","order");
x.t("ledger","accounts");
x.t("hold","override");
x.t("depend","prc/cst");
x.t("product/vendor/warehouse","level");
x.t("warehouse/vendor","replacement");
x.t("minimum","price");
x.t("unit","measure");
x.t("unit","measures");
x.t("f7-col","qtybrk");
x.t("cost","columns");
x.t("cost","flag");
x.t("cost","product/warehouse");
x.t("cost","product");
x.t("cost","overridden");
x.t("cost","changed");
x.t("cost","average");
x.t("cost","direct");
x.t("cost","sales");
x.t("cost","standard");
x.t("cost","calculate");
x.t("cost","product/vendor/warehouse");
x.t("cost","cost");
x.t("cost","replace");
x.t("cost","level");
x.t("cost","enter");
x.t("cost","10.00");
x.t("cost","accounting");
x.t("cost","values");
x.t("cost","column");
x.t("cost","q/b");
x.t("cost","company");
x.t("cost","update");
x.t("cost","updated");
x.t("cost","quantity");
x.t("prices/costs","product");
x.t("function","key");
x.t("12.50","gross");
x.t("maintenance","f7-price/cost");
x.t("maintenance","refer");
x.t("maintenance","f7-order");
x.t("maintenance","product");
x.t("maintenance","group");
x.t("maintenance","maintain");
x.t("maintenance","f7-");
x.t("maintenance","standard");
x.t("bill","material");
x.t("different","refer");
x.t("different","accounting");
x.t("different","replacement");
x.t("whether","price");
x.t("quantities","action");
x.t("replace","product");
x.t("solutions","866-878-0574");
x.t("972-403-3150","preludeeducation@activant.com");
x.t("webworks_writearrow","webworksrootpath");
x.t("retail","price");
x.t("u/m","unit");
x.t("qtybrk","opens");
x.t("qtybrk","quantity");
x.t("opens","product");
x.t("opens","price");
x.t("opens","add");
x.t("opens","cost");
x.t("opens","previous");
x.t("opens","quantity");
x.t("assigned","price");
x.t("stocking","unit");
x.t("stocking","u/m");
x.t("code","customer");
x.t("material","rolled");
x.t("pricing","exist");
x.t("pricing","field");
x.t("pricing","product");
x.t("pricing","discounts");
x.t("pricing","u/m");
x.t("pricing","stocking");
x.t("pricing","screen");
x.t("pricing","buying");
x.t("level","refer");
x.t("level","product");
x.t("level","purchase");
x.t("level","percent");
x.t("level","general");
x.t("level","company");
x.t("level","warehouse");
x.t("override","cost");
x.t("override","warehouse");
x.t("groups","information");
x.t("12.00","gross");
x.t("previous","prices");
x.t("previous","opens");
x.t("enter","gross");
x.t("enter","calculate");
x.t("enter","prices");
x.t("enter","additional");
x.t("enter","future");
x.t("enter","markup");
x.t("enter","costs");
x.t("enter","percent");
x.t("enter","password");
x.t("actual","costs");
x.t("webworks_writedivclose","product");
x.t("profit","prc/cst");
x.t("profit","enter");
x.t("profit","16.6");
x.t("profit","above");
x.t("profit","percent");
x.t("profit","commission");
x.t("value","displays");
x.t("value","replacement");
x.t("establishing","product");
x.t("establishing","unit");
x.t("additional","price");
x.t("calc","method");
x.t("10.00","want");
x.t("10.00","divided");
x.t("16.6","basis");
x.t("maintaining","product");
x.t("accounting","cost");
x.t("view","pressing");
x.t("view","edit");
x.t("view","previous");
x.t("screen","product");
x.t("screen","list");
x.t("screen","allows");
x.t("screen","allow");
x.t("screen","information");
x.t("screen","defined");
x.t("screen","activant");
x.t("breaks","exist");
x.t("breaks","product");
x.t("breaks","f9-cst");
x.t("breaks","screen");
x.t("breaks","costs");
x.t("breaks","quantity");
x.t("administrative","order");
x.t("established","product");
x.t("recalculates","price");
x.t("information","f5-recompute");
x.t("information","unit");
x.t("information","pricing");
x.t("information","setting");
x.t("buying","stocking");
x.t("reconciliation","standard");
x.t("defined","unit");
x.t("defined","screen");
x.t("future","prices");
x.t("future","opens");
x.t("future","pricing");
x.t("save","previous");
x.t("values","entered");
x.t("values","depend");
x.t("values","enter");
x.t("values","using");
x.t("replacement","cost");
x.t("replacement","enter");
x.t("above","value");
x.t("above","replacement");
x.t("1.20","price");
x.t("percentage","default");
x.t("percentage","multiplier");
x.t("column","indicated");
x.t("column","suggested");
x.t("column","descriptions");
x.t("column","price");
x.t("column","calculate");
x.t("column","replacement");
x.t("column","quantity");
x.t("q/b","indicates");
x.t("date","last");
x.t("date","prices");
x.t("date","date");
x.t("activant","solutions");
x.t("based","quantities");
x.t("based","quantity");
x.t("costs","components");
x.t("costs","product");
x.t("costs","entering");
x.t("costs","add");
x.t("costs","discounts");
x.t("costs","actual");
x.t("costs","defined");
x.t("costs","used");
x.t("markup","enter");
x.t("markup","percent");
x.t("order","below");
x.t("order","entry");
x.t("order","prices");
x.t("order","hold");
x.t("order","minimum");
x.t("stock","receipts");
x.t("percent","want");
x.t("percent","price");
x.t("percent","basis");
x.t("percent","percentage");
x.t("percent","used");
x.t("used","product");
x.t("used","cost");
x.t("used","stock");
x.t("break","refer");
x.t("break","table");
x.t("break","pricing");
x.t("break","costs");
x.t("special","pricing");
x.t("system","overridden");
x.t("866-878-0574","972-403-3150");
x.t("using","percentage");
x.t("using","percent");
x.t("calculated","value");
x.t("calculated","values");
x.t("vendor","invoice");
x.t("vendor","cost");
x.t("vendor","level");
x.t("setting","company");
x.t("setting","quantity");
x.t("general","ledger");
x.t("manually","calculated");
x.t("company","g/l");
x.t("company","wide");
x.t("company","maintenance");
x.t("company","vendor");
x.t("warehouse","product");
x.t("warehouse","maintenance");
x.t("warehouse","pricing");
x.t("warehouse","level");
x.t("warehouse","replacement");
x.t("password","administrative");
x.t("associated","product");
x.t("accounts","post");
x.t("commission","direct");
x.t("measures","different");
x.t("f8-prd","qtybrk");
x.t("effect","previous");
x.t("quantity","discount");
x.t("quantity","breaks");
x.t("quantity","break");
x.t("update","flag");
x.t("update","date");
x.t("updated","price");
x.t("updated","purchase");
x.t("updated","system");
x.t(":product","pricing");
}
