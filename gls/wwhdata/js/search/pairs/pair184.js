function FileData_Pairs(x)
{
x.t("example","subtract");
x.t("f2-save","saves");
x.t("method","webworks_writedivclose");
x.t("description","add/subtract");
x.t("divide","menu");
x.t("divide","lines");
x.t("divide","reference");
x.t("financial","report");
x.t("financial","general");
x.t("key","description");
x.t("key","descriptions");
x.t("descriptions","webworks_writearrow");
x.t("line","divide");
x.t("line","line");
x.t("line","leave");
x.t("line","calculation");
x.t("line","multiply/divide");
x.t("line","range");
x.t("line","subtract");
x.t("line","reference");
x.t("line","enter");
x.t("line","numbers");
x.t("line","used");
x.t("line","operator");
x.t("field","function");
x.t("field","definitions");
x.t("blank","divide");
x.t("blank","add");
x.t("blank","range");
x.t("blank","operator");
x.t("last","ref");
x.t("leave","remaining");
x.t("calculations","define");
x.t("type","field");
x.t("type","operation");
x.t("calculation","f2-save");
x.t("calculation","method");
x.t("calculation","next");
x.t("calculation","reference");
x.t("sequential","range");
x.t("multiply/divide","multiply");
x.t("division","divide");
x.t("division","operator");
x.t("determines","type");
x.t("add","sequential");
x.t("add","subtract");
x.t("add","ref");
x.t("add","reference");
x.t("add","previous");
x.t("menu","path");
x.t("beginning","ending");
x.t("entry","screen");
x.t("saves","calculation");
x.t("false","webworks_writedivopen");
x.t("false","field/function");
x.t("operation","entry");
x.t("operation","calculating");
x.t("operation","used");
x.t("range","lines");
x.t("range","ref");
x.t("range","reference");
x.t("path","financial");
x.t("webworks_writedivopen","wwdd1444461");
x.t("subtract","line");
x.t("subtract","lines");
x.t("subtract","multiply");
x.t("subtract","previous");
x.t("subtract","individual");
x.t("field/function","key");
x.t("allows","choose");
x.t("lines","example");
x.t("lines","division");
x.t("lines","add");
x.t("lines","multiplication");
x.t("lines","select");
x.t("lines","multiply");
x.t("lines","reference");
x.t("lines","adds");
x.t("lines","enter");
x.t("lines","subtracts");
x.t("fields","blank");
x.t("second","line");
x.t("second","reference");
x.t(":function","operation");
x.t("webworksrootpath","wwdd1444461");
x.t("multiplication","multiply");
x.t("multiplication","operator");
x.t("ledger","financial");
x.t("ledger","field");
x.t("next","line");
x.t("calculating","reference");
x.t("select","type");
x.t("select","add");
x.t("multiply","divide");
x.t("multiply","lines");
x.t("multiply","reference");
x.t("first","line");
x.t("first","ref");
x.t("first","reference");
x.t("ref","line");
x.t("ref","last");
x.t("ref","leave");
x.t("ref","lines");
x.t("ref","first");
x.t("ref","ref");
x.t("function","key");
x.t("function","operation");
x.t("define","calculation");
x.t("maintenance","type");
x.t("report","master");
x.t("report","manager");
x.t("solutions","866-878-0574");
x.t("972-403-3150","preludeeducation@activant.com");
x.t("webworks_writearrow","webworksrootpath");
x.t("reference","line");
x.t("reference","leave");
x.t("reference","lines");
x.t("reference","second");
x.t("reference","first");
x.t("reference","ref");
x.t("reference","reference");
x.t("reference","either");
x.t("reference","operator");
x.t("master","maintenance");
x.t("adds","reference");
x.t("previous","line");
x.t("enter","line");
x.t("enter","division");
x.t("enter","beginning");
x.t("enter","lines");
x.t("enter","second");
x.t("enter","multiplication");
x.t("enter","first");
x.t("subtracts","reference");
x.t("webworks_writedivclose","general");
x.t("manager","financial");
x.t("screen","allows");
x.t("screen","function");
x.t("screen","activant");
x.t("wwdd1444461","false");
x.t("choose","calculations");
x.t("activant","solutions");
x.t("numbers","range");
x.t("ending","line");
x.t("individual","lines");
x.t("either","add");
x.t("used","add");
x.t("used","ref");
x.t("866-878-0574","972-403-3150");
x.t("general","ledger");
x.t("remaining","fields");
x.t("add/subtract","add");
x.t("operator","determines");
x.t("operator","select");
x.t("operator","enter");
x.t("operator","operator");
x.t("definitions",":function");
}
